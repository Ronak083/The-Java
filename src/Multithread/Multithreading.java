package Multithread;

public class Multithreading {
    public static void main(String[] args) {
        new Thread(new Runnable() {
            @Override
            public void run() {
                long starttime = System.currentTimeMillis();
                for(int i =1;i<=5;i++){
                    brackets.generate("Thread 1");
                    try {
                        Thread.sleep(500);
                    } catch (InterruptedException e) {
                        throw new RuntimeException(e);
                    }
                }
                long endtime = System.currentTimeMillis();
                System.out.println(endtime-starttime);
            }

        }).start();
        new Thread(new Runnable() {
            @Override
            public void run() {
                long starttime = System.currentTimeMillis();
                for(int i =1;i<=5;i++){
                    brackets.generate("Thread 2");
                    try {
                        Thread.sleep(500);
                    } catch (InterruptedException e) {
                        throw new RuntimeException(e);
                    }
                }
                long endtime = System.currentTimeMillis();
                System.out.println(endtime-starttime);
            }
        }).start();
    }
}
class brackets{
    synchronized static public void generate(String threadcode){
        for (int i =0;i<=10;i++){
            if (i<=5){
                System.out.print("[");
            } else {
                System.out.print("]");
            }
        }
        System.out.println("Generated by thread: "+ threadcode);
    }
}
